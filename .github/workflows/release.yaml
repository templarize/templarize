name: Release

on:
  push:
    branches:
      - main

jobs:
  check-version:
    name: Check version
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check.outputs.version-changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.4.x'

      - name: Check version
        id: check
        run: |
          # Get the current and previous version from package.json
          CURRENT_VERSION=$(jq -r '.version' package.json)
          git fetch --depth=2
          PREVIOUS_VERSION=$(jq -r '.version' $(git diff HEAD~1 HEAD --name-only | grep package.json))

          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            echo "version-changed=true" >> $GITHUB_ENV
          else
            echo "Version did not change"
            echo "version-changed=false" >> $GITHUB_ENV
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.4.x'

      - name: Install dependencies
        run: yarn install

      - name: Build project
        run: yarn build

      - name: Publish to NPM
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  summary:
    name: Summary
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs:
      - release
    steps:
      - name: Check All
        run: echo OK
